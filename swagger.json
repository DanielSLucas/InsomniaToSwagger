{
  "openapi": "3.0.0",
  "info": {
    "title": "RP API - Rental of Materials",
    "description": "This system is intended to facilitate the management of a rental company that rents materials for parties such as fake cakes, artificial flower arrangements, etc.\n\n***The user of this system will not be the end customer (lessor), but the manager and/or employee responsible** **for scheduling the rents.**\n\nAmong the functions:\n\n- Stock of products;\n- List of customers and addresses;\n- Users with different roles;\n- Listing of rentals.\n- Creating a rental:\n   - The rent takes place on a specific date, so the rented products are only unavailable on the specified day.\n   - The rent belongs to a customer.\n   - The rent can contain a delivery address, or use the same address as the customer. otherwise it will be\n     considered that the products will be picked up from the company responsible for the rental.\n   - Based on the date received, the available products are listed with the available quantity.\n   - The product has a price at the time it is registered in the database, but the price for a rental may vary, so\n     in addition to the quantity, it is possible to define the price of the product when adding it to the order.\n   - Final amount, payment status and payment method must also be defined when creating a rental.\n \n## Authentication\n\n   **Before accessing any API route you must be authenticated.**\n\n   Also, some routes require permissions tied to the user's role.\n\n   Roles: **'ADM'** | **'OWNER'** | **'USER'**\n\n   *To perform authentication:\n\n- Access the **`/sessions`** route with a valid email and password in the request body.\n\n- The returned response is the JWT token and user information.\n\n- Add the returned token to the headers of other requests like this:\n```js\n   // headers\n   \"Authorization\": `Bearer ${token}`\n```",
    "version": "1.0.0",
    "contact": {
      "email": "daniellucas-pms@hotmail.com"
    }
  },
  "paths": {
    "/sessions": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Login",
        "description": "Creates a session and geretares the Bearer token (JWT token for authentication).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "daniellucas-pms@hotmail.com",
                  "password": "123456"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create User",
        "description": "Creates an user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "whatsapp": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "John Doe",
                  "email": "johndoe@email.com",
                  "password": "johnpass",
                  "whatsapp": "12912345678",
                  "role": "USER"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List users",
        "description": "List all users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Show user",
        "description": "Returns information of the specific user based on the ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update User",
        "description": "Updates information of the specific user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "whatsapp": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Lucas Pessoa",
                  "email": "lucas-pms@hotmail.com",
                  "password": "123456",
                  "whatsapp": "12981025796",
                  "role": "USER"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete User",
        "description": "Deletes a specific user based on ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/rents": {
      "post": {
        "tags": [
          "Rent"
        ],
        "summary": "Create Rent",
        "description": "Creates a rent.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "string"
                  },
                  "address_id": {
                    "type": "string"
                  },
                  "rent_date": {
                    "type": "string"
                  },
                  "rental_items": {
                    "type": "object"
                  },
                  "payment_status": {
                    "type": "string"
                  },
                  "payment_way": {
                    "type": "string"
                  },
                  "total_value": {
                    "type": "number"
                  }
                },
                "example": {
                  "customer_id": "4f0780dc-0dba-4b9d-919e-459673f3e117",
                  "address_id": "a283309e-ef41-4f28-a13f-441e284f7932",
                  "rent_date": "2021-09-14T00:26:57.197Z",
                  "rental_items": [
                    {
                      "product_id": "5c2287bd-a3a5-415e-b3fa-1bc0cc009c7e",
                      "quantity": 1,
                      "value": 50
                    }
                  ],
                  "payment_status": "PAID",
                  "payment_way": "CASH",
                  "total_value": 50
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Rent"
        ],
        "summary": "List Rents",
        "description": "Lists all rents with customer info.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/rents/{id}": {
      "get": {
        "tags": [
          "Rent"
        ],
        "summary": "Show Rent",
        "description": "Returns information of a specific rent and its relations, based on the ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Rent id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Rent"
        ],
        "summary": "Update Rent",
        "description": "Updates information of a specific rent.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Rent id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "string"
                  },
                  "address_id": {
                    "type": "string"
                  },
                  "rent_date": {
                    "type": "string"
                  },
                  "rental_items": {
                    "type": "object"
                  },
                  "payment_status": {
                    "type": "string"
                  },
                  "payment_way": {
                    "type": "string"
                  },
                  "total_value": {
                    "type": "number"
                  }
                },
                "example": {
                  "customer_id": "4f0780dc-0dba-4b9d-919e-459673f3e117",
                  "address_id": "a283309e-ef41-4f28-a13f-441e284f7932",
                  "rent_date": "2021-09-14T00:26:57.197Z",
                  "rental_items": [
                    {
                      "product_id": "5c2287bd-a3a5-415e-b3fa-1bc0cc009c7e",
                      "quantity": 1,
                      "value": 50
                    }
                  ],
                  "payment_status": "PAID",
                  "payment_way": "CASH",
                  "total_value": 50
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Rent"
        ],
        "summary": "Delete Rent",
        "description": "Deletes a specific rent based on the ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Rent id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/rents/week": {
      "get": {
        "tags": [
          "Rent"
        ],
        "summary": "Rents for the week",
        "description": "Lists all rents (and customer information) within 7 days from the specified date.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Data from which you want to see the next seven days' rents",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/rents/products/{id}": {
      "get": {
        "tags": [
          "Rent"
        ],
        "summary": "Rents by Product",
        "description": "List all rents that contains the specified product.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Rent id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/rents/customers/{id}": {
      "get": {
        "tags": [
          "Rent"
        ],
        "summary": "Rents by Customer",
        "description": "List all rents that belongs to the specified customer.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Rent id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/customers": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create Customer",
        "description": "Creates a customer.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "whatsapp": {
                    "type": "string"
                  },
                  "cpf": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Douglas de Souza",
                  "whatsapp": "12981412064",
                  "cpf": "09638912603"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "List Customers",
        "description": "Lists all customers in alphabetic order.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Show Customer",
        "description": "Returns information of a specific customer based on the ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update Customer",
        "description": "Updates information of a specific customer.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "whatsapp": {
                    "type": "string"
                  },
                  "cpf": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Douglas de Souza XP",
                  "whatsapp": "12981412064",
                  "cpf": "09638912600"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete Customer",
        "description": "Deletes a specific customer based on the ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/addresses": {
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "Create Address",
        "description": "Creates an address.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "neighborhood": {
                    "type": "string"
                  },
                  "street": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "address_type": {
                    "type": "string"
                  }
                },
                "example": {
                  "customer_id": "4f0780dc-0dba-4b9d-919e-459673f3e117",
                  "description": "Casa do Douglas de Souza",
                  "postal_code": "12605-390",
                  "city": "Lorena",
                  "neighborhood": "Vila Passos",
                  "street": "Mario P de Aquino Filho",
                  "number": "529",
                  "address_type": "Personal"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "List Addresses",
        "description": "Lists all addresses.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of address to list",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/addresses/{id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Show Address",
        "description": "Returns information of a specific address based on the ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Address id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Address"
        ],
        "summary": "Update Address",
        "description": "Updates information of a specific address.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Address id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "neighborhood": {
                    "type": "string"
                  },
                  "street": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "address_type": {
                    "type": "string"
                  }
                },
                "example": {
                  "description": "Casa do Douglas de Souza",
                  "postal_code": "12605-390",
                  "city": "Lorena",
                  "neighborhood": "Vila Passos",
                  "street": "Mario P de Aquino Filho",
                  "number": "529",
                  "address_type": "PERSONAL"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Address"
        ],
        "summary": "Delete Address",
        "description": "Deletes a specific address based on the ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Address id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/addresses/customers/{id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Show Customer address",
        "description": "Returns the address information for a specific customer based on the ID received by route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Address id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create Product",
        "description": "Creates a product.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "value": {
                    "type": "number"
                  },
                  "product_type": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Bolo normal",
                  "quantity": 1,
                  "value": 50,
                  "product_type": "cakes"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List Products",
        "description": "Lists all products in alphabetic order.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Show Product",
        "description": "Returns information of a specific product based on the ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update Product",
        "description": "Updates information of a specific product.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "string"
                  },
                  "value": {
                    "type": "number"
                  },
                  "product_type": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Bolo Caro",
                  "quantity": "1",
                  "value": 200,
                  "product_type": "Bolos"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete Product",
        "description": "Deletes a specific product based on the ID received in the route params.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/available": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List Available Products in a specific date",
        "description": "Returns all available products in a specific date.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Date you want to know the available products",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}